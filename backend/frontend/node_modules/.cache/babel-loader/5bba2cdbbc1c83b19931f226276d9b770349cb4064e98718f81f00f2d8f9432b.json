{"ast":null,"code":"import axios from 'axios';\nimport Hamburger from '@/components/Hamburger.vue';\nimport NavBar from '@/components/NavBar.vue';\nimport Logo from '@/components/Logo.vue';\nexport default {\n  name: 'Communicate',\n  components: {\n    Hamburger,\n    NavBar,\n    Logo\n  },\n  data() {\n    return {\n      tab: null,\n      userMessage: '',\n      chatbotResponse: ''\n    };\n  },\n  async submitForm() {\n    try {\n      const response = await axios.post('/chatbotinteraction', {\n        message: this.userMessage\n      });\n      if (response.data && response.data.response) {\n        this.chatbotResponse = response.data.response;\n      } else {\n        console.error('Invalid response format from server');\n      }\n      this.userMessage = '';\n    } catch (error) {\n      console.error('Error submitting form:', error);\n    }\n  }\n};","map":{"version":3,"names":["axios","Hamburger","NavBar","Logo","name","components","data","tab","userMessage","chatbotResponse","submitForm","response","post","message","console","error"],"sources":["C:\\laragon\\www\\App_Devs-PROJECT\\frontend\\src\\views\\Communicate.vue"],"sourcesContent":["<template>\r\n  <Logo />\r\n  <Hamburger />\r\n  <!-- <v-card class=\"d-flex flex-column justify-center align-center\"> -->\r\n  <NavBar />\r\n    <v-card-text>\r\n      <v-container class=\"align-center\">\r\n        <form @submit.prevent=\"submitForm\" class=\"mx-auto\">\r\n          <v-sheet width=\"300\">\r\n            <textarea\r\n              v-model=\"chatbotResponse\"\r\n              cols=\"30\"\r\n              rows=\"10\"\r\n              placeholder=\"Chatbot response...\"\r\n              style=\"\r\n                background-color: rgb(175, 189, 201);\r\n                width: 100%;\r\n                padding: 12px;\r\n                border: 1px solid #f58be7;\r\n                box-sizing: border-box;\r\n                margin-bottom: 16px;\r\n                resize: vertical;\r\n                min-height: 150px; /* Adjust the height */\r\n              \"\r\n              readonly\r\n            ></textarea>\r\n\r\n            <!-- User input textarea -->\r\n            <textarea\r\n              v-model=\"userMessage\"\r\n              cols=\"30\"\r\n              rows=\"5\" \r\n              placeholder=\"Input your thoughts here...\"\r\n              style=\"\r\n                background-color: rgb(175, 189, 201);\r\n                width: 100%;\r\n                padding: 12px;\r\n                border: 1px solid #f58be7;\r\n                box-sizing: border-box;\r\n                margin-bottom: 16px;\r\n                resize: vertical;\r\n              \"\r\n            ></textarea>\r\n\r\n            <!-- Submit button -->\r\n            <v-btn type=\"submit\" block class=\"mt-2\">Submit</v-btn>\r\n          </v-sheet>\r\n        </form>\r\n      </v-container>\r\n    </v-card-text>\r\n  <!-- </v-card> -->\r\n</template>\r\n<script>\r\nimport axios from 'axios';\r\nimport Hamburger from '@/components/Hamburger.vue';\r\nimport NavBar from '@/components/NavBar.vue'\r\nimport Logo from '@/components/Logo.vue'\r\nexport default {\r\n  name: 'Communicate',\r\n  components:{\r\n    Hamburger,\r\n    NavBar,\r\n    Logo\r\n  },\r\n  data() {\r\n    return {\r\n      tab: null,\r\n      userMessage: '',\r\n      chatbotResponse: ''\r\n    };\r\n  },\r\n    async submitForm() {\r\n      try {\r\n        const response = await axios.post('/chatbotinteraction', {\r\n          message: this.userMessage\r\n        });\r\n\r\n        if (response.data && response.data.response) {\r\n          this.chatbotResponse = response.data.response;\r\n        } else {\r\n          console.error('Invalid response format from server');\r\n        }\r\n\r\n        this.userMessage = '';\r\n      } catch (error) {\r\n        console.error('Error submitting form:', error);\r\n      }\r\n    }\r\n  }\r\n</script>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n<style>\r\ntextarea {\r\n  min-width: 100%; \r\n}\r\n\r\n.flex-column {\r\n  flex-direction: column;\r\n}\r\n.align-center {\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: flex-start;\r\n  height: 100%;\r\n}\r\n</style>\r\n"],"mappings":"AAqDA,OAAOA,KAAI,MAAO,OAAO;AACzB,OAAOC,SAAQ,MAAO,4BAA4B;AAClD,OAAOC,MAAK,MAAO,yBAAwB;AAC3C,OAAOC,IAAG,MAAO,uBAAsB;AACvC,eAAe;EACbC,IAAI,EAAE,aAAa;EACnBC,UAAU,EAAC;IACTJ,SAAS;IACTC,MAAM;IACNC;EACF,CAAC;EACDG,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,GAAG,EAAE,IAAI;MACTC,WAAW,EAAE,EAAE;MACfC,eAAe,EAAE;IACnB,CAAC;EACH,CAAC;EACC,MAAMC,UAAUA,CAAA,EAAG;IACjB,IAAI;MACF,MAAMC,QAAO,GAAI,MAAMX,KAAK,CAACY,IAAI,CAAC,qBAAqB,EAAE;QACvDC,OAAO,EAAE,IAAI,CAACL;MAChB,CAAC,CAAC;MAEF,IAAIG,QAAQ,CAACL,IAAG,IAAKK,QAAQ,CAACL,IAAI,CAACK,QAAQ,EAAE;QAC3C,IAAI,CAACF,eAAc,GAAIE,QAAQ,CAACL,IAAI,CAACK,QAAQ;MAC/C,OAAO;QACLG,OAAO,CAACC,KAAK,CAAC,qCAAqC,CAAC;MACtD;MAEA,IAAI,CAACP,WAAU,GAAI,EAAE;IACvB,EAAE,OAAOO,KAAK,EAAE;MACdD,OAAO,CAACC,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;IAChD;EACF;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}